import java.time.Instant

plugins {
    id("java")
    id("application")
    id("com.github.johnrengelman.shadow") version "8.1.1"
    id("com.gorylenko.gradle-git-properties") version "2.4.2"
}

group = 'com.ursineenterprises'
version = '1.0.0-SNAPSHOT'
description = 'calendar-events-generator'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(23)
    }
}

application {
    mainClass.set("com.ursineenterprises.calendareventsgenerator")
}

repositories {
    mavenCentral()
    google()
}

dependencies {
    compileOnly 'org.projectlombok:lombok:1.18.36'
    annotationProcessor 'org.projectlombok:lombok:1.18.36'

    testCompileOnly 'org.projectlombok:lombok:1.18.36'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.36'

    implementation 'com.google.apis:google-api-services-calendar:v3-rev20250404-2.0.0'
    implementation 'com.google.auth:google-auth-library-oauth2-http:1.22.0'
    implementation 'com.google.api-client:google-api-client:2.4.0'
    implementation 'com.google.api-client:google-api-client-gson:2.0.1'
    implementation 'com.google.oauth-client:google-oauth-client-jetty:1.39.0'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.17.2'
    implementation 'com.fasterxml.jackson.core:jackson-core:2.17.2'
    implementation 'com.fasterxml.jackson.core:jackson-annotations:2.17.2'

    implementation 'org.slf4j:slf4j-simple:2.0.12'

    testImplementation 'org.junit.jupiter:junit-jupiter:5.10.0'
}

tasks.withType(JavaCompile) {
    options.annotationProcessorPath = configurations.annotationProcessor
}

tasks.test {
    useJUnitPlatform()
}

def buildTime = Instant.now().toString()

def gitCommit = "UNKNOWN"
try {
    def proc = ["git", "rev-parse", "--short", "HEAD"].execute(null, rootDir)
    proc.waitFor()
    gitCommit = proc.in.text.trim()
} catch (Exception e) {
    println "Could not determine git commit: ${e.message}"
}

shadowJar {
    archiveBaseName.set("calendareventsgenerator")
    archiveClassifier.set("")
    archiveVersion.set(version.toString())
    manifest {
        attributes(
                "Main-Class": application.mainClass.get(),
                "Build-Time": buildTime,
                "Git-Commit": gitCommit
        )
    }
}